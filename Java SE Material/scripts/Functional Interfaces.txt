Functional Interfaces:
-------------------------------
java.util.function package
1. Perdicate<T t>    test(T t)   return boolean           > Represents a predicate (boolean-valued function) of one argument.

2. Consumer <T>    accept(T t)     Takes one argument, produces nothing.

* Supplier<T t>     get()	return T   >  Represents a supplier of results.
There is no requirement that a new or distinct result be returned each time the supplier is invoked.

Function: Takes one argument, produces one result.        ( in ours TextInterface ex )
Consumer: Takes one argument, produces nothing.
Supplier: Takes no argument, produces one result.
IntBinaryOperator : takes int two arguments, produces one result int  ( in ours AddInterface ex )
BinaryOperator    : 
Runnable: Takes no argument, produces nothing.			( in ours GreetingInterface ex)
BiFunction<T,U,R> :	Represents a function that accepts two arguments and produces a result.
BiConsumer<T,U>	:  	Represents an operation that accepts two input arguments and returns no result.
a